package com.java.jsf;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

public class ProviderAuthDaoImpl {
	SessionFactory  sf;
	Session session;
	
	
	
	private String Validate(String userName) {
		
	} 
	
	
	
	public  ProviderAuth getProvider(String providerId) {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Criteria cr=session.createCriteria(ProviderAuth.class);
		cr.add(Restrictions.eq("providerId", providerId));
		ProviderAuth provide=(ProviderAuth) cr.uniqueResult();	
		return provide;
	}
	
	public String resetPassWord(ProviderAuth provider) {	
		ProviderAuth provide=getProvider(provider.getProviderId());
		String pass1=provide.getPassword();
		String pass2=EncryptPassword.getCode(provider.getPassword());
		
		if(provider.getPassword().equals(provider.getRetypePassWord())&&(!(pass1.contentEquals(pass2)))){
			sf = SessionHelper.getConnection();
			session = sf.openSession();
			Transaction trans = session.beginTransaction();
			String encr=EncryptPassword.getCode(provider.getPassword());
			provide.setPassword(encr);
			provide.setStatus("Active");
			provide.setOtp("");
			session.update(provide);
			session.getTransaction().commit();
			return"LoginProvider.jsp?faces-redirect=true";
		 }else {
			return"ResetPassWord.jsp?faces-redirect=true";
		}	
	}
}
