package com.java.jsf;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

public class ProviderAuthDaoImpl {
	SessionFactory  sf;
	Session session;
	
	
	
	public  ProviderAuth getProvider(String providerId) {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Criteria cr=session.createCriteria(ProviderAuth.class);
		cr.add(Restrictions.eq("providerId", providerId));
		ProviderAuth cust=(ProviderAuth) cr.uniqueResult();	
		return cust;
	}
	
	public String resetPassWord(ProviderAuth provider) {	
		ProviderAuth custp=getProvider(provider.getProviderId());
		String pass1=custp.getPassword();
		String pass2=EncryptPassword.getCode(provider.getPassword());
		if(provider.getPassword().equals(provider.getRetypePassWord())&&(!(pass1.contentEquals(pass2)))){
			sf = SessionHelper.getConnection();
			session = sf.openSession();
			Transaction trans = session.beginTransaction();
			String encr=EncryptPassword.getCode(cust.getPassCode());
			custp.setPassCode(encr);
			custp.setStatus("Active");		
			session.update(custp);
			session.getTransaction().commit();
			return"LoginCustomer.jsp?faces-redirect=true";
		 }else {
			return"ResetPassWord.jsp?faces-redirect=true";
		}	
	}
}
